@page "/"
@using HexedSceneryCommon.User;
@using Microsoft.AspNetCore.Components.Web
@using System.Net;
@namespace HexedSceneryWebsite.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="css/Profile.css" rel="stylesheet" />
    <link href="css/DiceChart.css" rel="stylesheet" />
    <link href="css/MordheimPage.css" rel="stylesheet" />
    <link href="css/Skills.css" rel="stylesheet" />
    <link href="css/MordheimNavMenu.css" rel="stylesheet" />
    <link href="css/Encounter.css" rel="stylesheet" />
    <link href="css/RandomHappeningPane.css" rel="stylesheet" />
    <link href="css/button.css" rel="stylesheet" />
    <link href="css/HiredSwords.css" rel="stylesheet" />
    <link href="css/DropDown.css" rel="stylesheet" />
    <link href="HexedSceneryWebsite.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="hexedscenerylogo.jpg" />

    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="scripts/justselect.js"></script>
</body>
</html>

@*@{
    var ip = HttpContext.Connection?.RemoteIpAddress.ToString();
    if (ip == "::1")
    {
        ip =
        Dns.GetHostEntry(Dns.GetHostName()).AddressList[0].ToString();
    }
    var userInfo = new UserInfo { IpAddress = ip, UserAgent = HttpContext.Request.Headers["User-Agent"] };
}*@