@page "/encounterType/{encountertypeid}"
@using HexedSceneryMobileApp.Services

@inject IEncounterService EncounterService

@if (_encounterType == null)
{
    <span>Loading...</span>
}
else
{
    <h1>@_encounterType.DisplayName</h1>

    <HexedSceneryMobileApp.Components.Components.DiceRoller DiceTypeId="@_encounterType.DiceType.Id" NumberOfDice="@_encounterType.NumberOfDice.Value" OnNewResult="UpdateDiceResult" />
    @if (_diceResult != 0)
    {
        <HexedSceneryMobileApp.Components.Components.Encounter EncounterTypeId="@_encounterType.Id" EncounterResultNumber="@_diceResult" />
    }
}


@code {
    [Parameter]
    public string EncounterTypeId { get; set; }

    private Models.EncounterType _encounterType;
    

    private int _diceResult;


    protected override async Task OnInitializedAsync()
    {
        // if (int.TryParse(EncounterTypeId, out int result))
        // {
        //     _encounterType = await EncounterTypeHandler.GetEncounterType(result);
        // }

    }

    protected override async Task OnParametersSetAsync()
    {
        if (int.TryParse(EncounterTypeId, out int result))
        {
            _encounterType = await EncounterService.GetEncounterTypeAsync(result);
        }
    }

    public async Task UpdateDiceResult(int newResult)
    {
        _diceResult = newResult;
    }
}
