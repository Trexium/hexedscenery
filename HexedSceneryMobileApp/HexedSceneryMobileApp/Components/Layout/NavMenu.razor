@using HexedSceneryMobileApp.Helpers
@using HexedSceneryMobileApp.Models
@using System.Linq;

@inject IMenuBuilder menuBuilder

<div class="background-paper-menu">
    <svg>
        <filter id="wavy2">
            <feTurbulence x="0" y="0" baseFrequency="0.022" numOctaves="5" seed="1"></feTurbulence>
            <feDisplacementMap in="SourceGraphic" scale="50" />
        </filter>
    </svg>
</div>

<MudNavMenu Class="overflow-hidden">
    @if (_menuItems == null)
    {
        <span>Loading...</span>
    }
    else
    {
        @foreach (var title in _menuItems.Values)
        {
            @if (!string.IsNullOrEmpty(title.DisplayTitle))
            {
                <MudNavGroup Class="nav-category" Title="@title.DisplayTitle" @bind-Expanded="@title.Expanded" onclick="@(() => ToggleExpanded(title.Id))">
                    @foreach (var menuItem in title.Children)
                    {
                        <MudNavLink Href="@menuItem.Url" Match="NavLinkMatch.Prefix">@menuItem.DisplayName</MudNavLink>
                    }
                </MudNavGroup>
            }
        }
    }

</MudNavMenu>


@code {
    private Dictionary<string, MenuGroup> _menuItems;


    protected override async Task OnInitializedAsync()
    {
        _menuItems = new();
        var menuTitles = await menuBuilder.GetMenuAsync();

        _menuItems = menuTitles.ToDictionary(k => k.Id);
    }


    private void ToggleExpanded(string identifier)
    {
        foreach (var key in _menuItems.Keys)
        {
            if (key != identifier)
            {
                _menuItems[key].Expanded = false;
            }
        }
        StateHasChanged();
    }
}